# Attach or create tmux session named the same as current directory

path_name="$(basename "$PWD" | tr . -)"
session_name=${1:-$path_name}
window_name=${2:-''}

not_in_tmux() {
  [ -z "$TMUX" ]
}

session_exists() {
  tmux has-session -t "$session_name" &> /dev/null
}

create_detached_session() {
  TMUX='' tmux new-session -Ad -s "$session_name"
}

contains_element() {
  names=$(tmux list-windows -t "$session_name" -F '#{window_name}')
  names=($(echo $names | tr '\n' ' '))

  for item in ${names[@]}; do
    [[ "$item" == "$1" ]] && return 0
  done

  return 1
}

attach_session_window() {
  # no tmux session
  # create new tmux session with window name
  if ! session_exists; then
    tmux new-session -As "$session_name" \; \
      rename-window -t "zsh" "$window_name"
    return
  fi

  # has tmux session
  # connect to window if name exists
  if contains_element "$window_name"; then
    tmux new-session -As "$session_name" \; \
      select-window -t "$window_name"
  # create new window with name
  else
    tmux new-session -As "$session_name" \; \
      new-window -n "$window_name"
  fi
}

attach_session_window_from_tmux() {
  # no tmux session
  # create new tmux session with window name
  if ! session_exists; then
    create_detached_session
    tmux switch-client -t "$session_name" \; \
      rename-window -t "zsh" "$window_name"
    return
  fi

  # has tmux session
  # connect to window if name exists
  if contains_element "$window_name"; then
    tmux switch-client -t "$session_name" \; \
      select-window -t "$window_name"
  # create new window with name
  else
    tmux switch-client -t "$session_name" \; \
      new-window -n "$window_name"
  fi
}

create_if_needed_and_attach() {
  # not in tmux session
  if not_in_tmux; then
    # no window name
    # create/attach tmux session and exit
    if [[ -z "$window_name" ]]; then
      tmux new-session -As "$session_name"
      return
    fi

    # has window name
    attach_session_window

  # in tmux session
  else
    # no window name
    # create/attach tmux session and exit
    if [[ -z "$window_name" ]]; then
      if ! session_exists; then
        create_detached_session
      fi
      tmux switch-client -t "$session_name"
      return
    fi

    # has window name
    attach_session_window_from_tmux
  fi
}

create_if_needed_and_attach
# vi: set ft=sh:
