snippet #! "shebang"
#!/usr/bin/env $0
endsnippet

snippet bash "bash shebang"
#!/usr/bin/env bash$0
endsnippet

snippet {
{
	${0:#statements}

endsnippet

snippet [
[[ ${0:test} ]
endsnippet

snippet case "case .. esac (case)"
case ${1:word} in
	${2:pattern})
		$0;;
esac
endsnippet

snippet elif "elif .. (elif)"
elif ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
endsnippet

snippet fn "function"
${1:function_name}() {
	${0:#function_body}
}
endsnippet

snippet for
for (( ${1:i} = 1; $1 <= ${2:count}; $1++ )); do
	${0:${VISUAL}}
done
endsnippet

snippet fori "for ... in ... done (forin)"
for ${1:i}${2/.+/ in /}${2:words}; do
	${0:#statements}
done
endsnippet

snippet ft "modeline filetype"
# `!v 'vim'`:ft=${1:zsh}:
endsnippet

snippet fun
${1:function_name}() {
	${0:#function_body}
}
endsnippet

snippet here "here document (here)"
<<${2:'${1:TOKEN}'}
	$0
${1/['"`](.+)['"`]/$1/}
endsnippet

snippet if "if ... then (if)"
if ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
fi
endsnippet

snippet ife
if ${2:[[ ${1:condition} ]]}; then
	${3:${VISUAL}}
else
	${0:# statements}
fi
endsnippet

snippet repeat
repeat ${1:integer}; do
	${0:${VISUAL}}
done
endsnippet

snippet select
select ${1:answer} in ${2:choices}; do
	${0:${VISUAL}}
done
endsnippet

snippet until "until ... (done)"
until ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done
endsnippet

snippet while "while ... (done)"
while ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done
endsnippet
